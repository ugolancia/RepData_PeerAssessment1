irisub<- sapply(iris[, 4], mean)
sapply(iris[, 4], mean)
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
class(flags)
lapply(flags, class)
cls_list<- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vector<- sapply(flags, class)
cls_vect<- sapply(flags, class)
class(cls_vect)
y<- iris
head(y)
x<- gsub(1, "wow", y[, 4])
x<- y[, 4]
z<- gsub(0.2, "ow", x)
z<- gsub(0.2, "ow", x)
y<- cbind(y, z)
head(y)
y[, 4]<- NULL
head(y)
y<- cbind(y, z[2])
head(y)
library(dplyr)
?arrange
?mutate
mutate(mtcars, displ_l = disp / 61.0237)
transmute(mtcars, displ_l = disp / 61.0237)
new.df<- cbind(iris[, 1:3], z, iris[, 4:5])
head(new.d)
head(new.df)
306-73
273-57
233+216
mymatr<- matrix(c(73, 57, 233, 216), 2, 2)
chisq.test(mymatr)
mymatr
269-15
310-114
196+254
mymatr2<- matrix(c(15, 114, 254, 196), 2, 2)
chisq.test(mymatr2)
barplot(prop.table(mymatrix2, 2), col = c("blue", "orange"), xlim=c(0, 4), width= 1)
barplot(prop.table(mymatr2, 2), col = c("blue", "orange"), xlim=c(0, 4), width= 1)
barplot(prop.table(mymatr2, 2), col = c("blue", "orange"), xlim=c(0, 4), width= 1, main= "eventi cardiovascolari nel gruppo
trattato con farmaci biologici o farmaci tradizionali")
barplot(prop.table(mymatr2, 2), col = c("blue", "orange"), xlim=c(0, 4), width= 1)
146+82
228+15
mymatr3<- matrix(c(8, 7, 146, 82), 2, 2)
chisq(mymatr3)
mymatr3<- matrix(c(8, 7, 146, 82), 2, 2)
chisq.test(mymatr3)
expected(chisq.test(mymatr3))
?chisq.test
x<- chisq.test(mymatr3)
x$expected
mymatrtrial<- matrix(c(32, 28, 146, 82), 2, 2)
chisq.test(mymatrtrial)
mymatrtrial<- matrix(c(80, 70, 1460, 820), 2, 2)
chisq.test(mymatrtrial)
273*0.63
249/569
59/129
59*0.237
83*0.56
83-46
65*0.44
65-29
46+29
129-75
##suddivisione secondo tipo di evento e gruppo di patologia
mymatr4<- matrix(c(46, 29, 37, 36), 2, 2)
chisq.test(mymatr4)
306*0.23
306*0.77
273*0.45
mymatr0<- matrix(c(70, 123, 236, 150), 2, 2)
chisq.test(mymatr0)
barplot(prop.table(mymatr0, 2), col = c("red", "yellow"), xlim=c(0, 4), width = 1)
6/sqrt(5)
pnorm(2.68)
1-pnorm(2.68)
2*sqrt(5)
qnorm(0.98)
qnorm(0.99)
qnorm(0.95)
25/30
sqrt(25/30+25/30)
0.84+0.84
sqrt(1.68)
sqrt(0.50)
6/1.30
pt(4.61, df=58)
1-pt(4.61, df=58)
247/17
-170-77
-107/17
-107+18
89/17
-99/14
library(swirl)
swirl()
install_from_swirl("Data Analysis")
swirl()
source('~/.active-rstudio-document')
source('~/Desktop/trial.R')
source('~/Desktop/trial.R')
df<- data.frame(rep(1, 5), rep(0, 5))
View(df)
library(dplyr)
df<- tbl_df(df)
df
mutate(df, merged = rep.1..5 + re-0..5)
mutate(df, merged = rep.1..5 + rep-0..5)
mutate(df, merged = rep.1..5 + rep.0..5)
mutate(df, merged = rep.1..5. + rep.0..5.)
df
rename(df, var1 = rep.1..5.)
rename(df, var1 = rep.1..5.)
df<- data.frame(sample(0:1, 10), sample(0:1, 10), colnames= c("red", "green"))
df<- data.frame(sample(rep(0:1, 10), 10), sample(rep(0:1, 10), 10), colnames= c("red", "green"))
df<- data.frame(sample(rep(0:1, 10), 10), sample(rep(0:1, 10), 10), names = c("red", "green"))
df<- data.frame(red = sample(rep(0:1, 10), 10), green = sample(rep(0:1, 10), 10))
df$redgreen<- df$red + df$green
table(df$red, df$green)
table(df$red | df$green)
sum(table(df$red | df$green))
sum(df$red | df$green)
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color = "blue")
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
hist(low)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg<- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25~region, col = "red")
boxplot(pollution, pm25 ~ region, col = "red")
?boxplot
boxplot(pm25 ~ region, pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution$pm25, region == "west"), col = "green")
hist(subset(pollution, region == "west")[, 1], col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
?abline
?abline(h = 12. lwd = 2, lty = 2)
?abline(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
west<- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
76*3+273
install.packages("lattice")
library(lattice)
str(iris)
xyplot(Sepal.Length~Petal.Length | Species, data = iris)
head(mtcars)
str(mtcars)
row.names(mtcars)
x<- transform(mtcars, row.names = factor(row.names))
x<- transform(mtcars, row.names(mtcars) = factor(row.names(mtcars)))
carmodel<- row.names(mtcars)
y<- cbind(carmodel, mtcars)
y<- transform(y, carmodel = factor(carmodel))
xyplot(gear~carb | carmodel, data = y)
xyplot(hp~drat | carmodel, data = y)
xyplot(hp~mpg | carmodel, data = y)
data()
head(environmental)
str(environmental)
str(barley)
xyplot(yeld~site, data = barley)
xyplot(yield~site, data = barley)
str(sleep)
str(cars)
row.names(cars)
str(USArrests)
row.names(USArrests)
y<- row.names(USArrests)
install.packages("ggplot2")
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris)
qplot(Sepal.Length, Petal.Length, data = iris, col = Species)
qplot(Sepal.Length, Petal.Length, data = iris, col = Species, geom = c("points", "smooth"))
qplot(Sepal.Length, Petal.Length, data = iris, col = Species, geom = c("point", "smooth"))
qplot(Sepal.Length, Petal.Length, data = iris, geom = c("point", "smooth"))
qplot(Petal.Length, data = iris, color = Species)
qplot(Sepal.Length, Petal.Length, data = iris, geom = c("point", "smooth"))
qplot(Sepal.Length, Petal.Length, data = iris, geom = c("point", "smooth"), method = "lm")
qplot(Sepal.Length, Petal.Length, data = iris, col = Species, geom = c("point", "smooth"), method = "lm")
qplot(Sepal.Length, Petal.Length, data = iris, col = Species, geom = c("point", "smooth"), method = "lm", facets = .~Species)
library(lattice)
installed.packages("nlme")
library(nlme)
head(Diet)
head(BodyWeight)
summary(BodyWeight)
str(BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(swirl)
swirl()
head(cars)
with(cars, plot(speed, dist))
text(car$speed, max(car$dist), "SWIRL rules")
text(cars$speed, max(cars$dist), "SWIRL rules")
text(cars$speed, max(cars$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
play()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
nxt()
head(state)
table(state$region)
xyplot(Life.Exp~Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp~Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
mpg$models
table(mpg$models)
table(mpg$model)
qplot(dipl, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
?rnorm
x<- rnorm(20, mean(rep(1:4, each=6)), sd=1)
x
mean(rep(1:4, each=6))
rep(1:4, each=6)
sum(rep(1:4, each = 6))
y<- rep(1:4, each=6)
60/24
library(swirl)
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
as.dendogram(hc)
as.dendogram(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=0.4, col = "red")
5
abline(h=0.05, col = "purple")
abline(h=0.05)
abline(h=0.05, col= "red")
info()
nxt()
12
abline(h=0.05, col= "green")
library(swirl)
swirl()
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col= "cmcolors(25")
heatmap(dataMatrix, col= "cmcolors(25)")
heatmap(dataMatrix, col= "cm.colors(25)")
heatmap(dataMatrix, col = "cm.colors(25)")
heatmap(dataMatrix, Colv = "cm.colors(25)")
?heatmap
heatmap(dataMatrix, RowSideColors = "cm.colors(25)")
heatmap(dataMatrix
)
heatmap(dataMatrix, col = cm.colors(25))
heatmap(ht)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, cols1[newClust])
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, pch = 8, cex = 2, col = cols1, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, pch = 9, cex = 2, col = cols1, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj
kmObj$iter
plot(x, y, kmObj$cluster, pch = 19, cex = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObh$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
points(kmOjh$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
kmeans(dataFrame, centers = 6)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
kmeans(dataFrame, centers = 6)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
coinFlip<- rbinom(1, size=1, prob = 0.5)
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
?rbinom
rbinom(1, size=1, prob = 0.5)
rbinom(1, size=1, prob = 0.5)
rbinom(1, size=1, prob = 0.5)
rbinom(1, size=1, prob = 0.5)
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
coinFlip
rep(c(0,3, each = 5))
rep(c(0,3, each = 5))
rep(c(0,3, each = 5))
?rep
rep(c(0,3), each = 5)
set.seed(12345)par(mar = rep(0.2, 4))dataMatrix <- matrix(rnorm(400), nrow = 40)
set.seed(12345)par(mar = rep(0.2, 4))dataMatrix <- matrix(rnorm(400), nrow = 40)
dataMatrix <- matrix(rnorm(400), nrow = 40)
head(dataMatrix)
heatmap(dataMatrix)
for (i in 1:40) { # flip a coin  coinFlip <- rbinom(1, size = 1, prob = 0.5)  # if coin is heads add a common pattern to that row   if (coinFlip) {  print(coinFlip) }}
for (i in 1:40) { # flip a coin  coinFlip <- rbinom(1, size = 1, prob = 0.5)  if (coinFlip) {  print(coinFlip) }}
for (i in 1:40) { # flip a coin  coinFlip <- rbinom(1, size = 1, prob = 0.5)  if (coinFlip) {  print(0) }  else { print 1 }}
for (i in 1:40) {  coinFlip <- rbinom(1, size = 1, prob = 0.5)  if (coinFlip) {  print(0) }  else { print 1 }}
for (i in 1:40) {  coinFlip <- rbinom(1, size = 1, prob = 0.5)  if (coinFlip){  print(0) }  else{ print 1 }}
for (i in 1:40) {  coinflip<- numeric()  coinFlip <- rbinom(1, size = 1, prob = 0.5)  if (coinFlip){  print(0) }  else{ print 1 }}
with(airqualiy, plot(Wind, Solra))
with(airqualiy, plot(Wind, Solar.R))
with(iris, plot(Sepal.Length, Petal.Length))
segments(2, 2, 5, 5)
129-(58+14)
324-64
datasets()
dataset()
data()
class(airquality)
class(cars)
class(Titanic)
class(women)
class(eurodist)
sapply(data, class)
sapply(datasets, class)
class(EuStockMarkets)
head(EuStockMarkets)
head(airquality)
head(iris)
attributes(iris)
attributes(iris$Sepal.Length)
class(iris$Petal.Length)
?attributes
attributes(EuStockMarkets)
21.11-20.92
str(HairEyeColor)
hair<- HairEyeColor$Hair
hair<- HairEyeColor[[1]]
class(hair)
hair
HairEyeColor
str(mtcars)
str(sleep)
str(quakes)
species<- as.character(iris$Species)
species<- unique(species)
count<- c()
for(i in 1:length(species)) {
count<- nchar(species[i])
}
count
count<- c()
for(i in 1:length(species)) {
count[i]<- nchar(species[i])
}
count
species
str(cars)
plot(cars)
plot(cars, distance, speed)
plot(cars$distance, cars$speed)
plot(cars$dist, cars$speed)
plot(iris)
browseVignettes("ggplot2")
?weekdays
setwd("~/Desktop/github/RepData_PeerAssessment1")
activity<- read.csv("activity.csv")
head(activity)
str(activity)
total_steps_per_day <- tapply(activity$steps, activity$date, sum)
hist(total_steps_per_day, breaks = 10)
mean_steps_per_day<- tapply(activity$steps, activity$date, mean)
hist(mean_steps_per_day, breaks = 10)
average_all_days<- mean(total_steps_per_day, na.rm = TRUE)
median_all_days<- median(total_steps_per_day, na.rm = TRUE)
average_all_days
median_all_days
mean_steps_per_interval<- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
str(mean_steps_per_interval)
plot(mean_steps_per_interval, type = "l")
max(mean_steps_per_interval)
my_obs<- which(mean_steps_per_interval== max(mean_steps_per_interval))
my_obs
ndex<- is.na(activity$steps)
long_mean_steps_per_interval<- rep(mean_steps_per_interval, 61)
library(dplyr)
activity<- tbl_df(activity)
activity_1<- mutate(activity, steps = replace(steps, index, long_mean_steps_per_interval))
str(activity_1)
sum(is.na(activity_1))
total_steps_per_day_1 <- tapply(activity_1$steps, activity_1$date, sum)
hist(total_steps_per_day_1, breaks = 10)
average_daily_1<- mean(total_steps_per_day_1)
median_daily_1<- median(total_steps_per_day_1)
average_daily_1
median_daily_1
library(dplyr)
activity<- tbl_df(activity)
activity_1<- mutate(activity, steps = replace(steps, index, long_mean_steps_per_interval))
index<- is.na(activity$steps)
activity_1<- mutate(activity, steps = replace(steps, index, long_mean_steps_per_interval))
str(activity_1)
sum(is.na(activity_1))
total_steps_per_day_1 <- tapply(activity_1$steps, activity_1$date, sum)
hist(total_steps_per_day_1, breaks = 10)
average_daily_1<- mean(total_steps_per_day_1)
median_daily_1<- median(total_steps_per_day_1)
average_daily_1
median_daily_1
activity_1
mutate(activity_1, weekdays = weekdays(date))
mutate(activity_1, weekdays = weekdays(as.date(date))
)
?as.date
?date
mutate(activity_1, weekdays = weekdays(date(date)))
View(activity_1)
mutate(activity_1, as.Date(date, "%Y%m%d"))
date<- activity_1$date
date<- as.Date(date, "%Y%m%d")
date<- activity_1$date
date<- as.character(date)
date<- as.Date(date, "%Y%m%d")
date<- activity_1$date
date<- as.Date(date, "%Y-%m-%d")
activity_2<- mutate(activity_1, date = as.Date(date, "%Y-%m-%d))
)
)
class(activity_1)
activity_2<- mutate(activity_1, date = as.Date(date, "%Y-%m-%d))
activity_2<- mutate(activity_1, date = as.Date(date, "%Y-%m-%d"))
str(activity_2)
activity_2<- mutate(activity_2, weekdays = weekdays(date))
activity_2
?weekdays
activity_2<- mutate(activity_2, weekend = weekdays[c("Saturday", "Sunday")])
activity_2<- mutate(activity_2, weekend = as.factor(weekdays[c("Saturday", "Sunday")]))
View(activity_1)
str(activity_1)
